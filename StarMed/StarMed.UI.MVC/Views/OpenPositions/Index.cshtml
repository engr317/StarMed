@model IEnumerable<StarMed.DATA.EF.OpenPosition>

@{
    ViewBag.Title = "Current Open Positions";
}

<h2 class="view-title">@ViewBag.Title</h2>

@if (User.IsInRole("Manager"))
{<h3 style="text-align:center;">@Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-default" })</h3>}

<div style="background-image:url(/Content/images/cork-board.jpg); padding:3em; background-repeat:no-repeat; background-position:center;background-size: cover; ">
    <div class="row">
        <div class="col-md-6 col-sm-4">
            @foreach (var item in Model)
            {
                <div class="card mb-1" style="width: 500px;">
                    <div class="row no-gutters">
                        <div class="col-md-4">
                            <!--Future Update to add image field to position then update this with the Dynamic Image from the positions.-->
                            <img src="~/Content/images/nurse-1490637001R9I.jpg" class="card-img-top img-responsive" alt="nurse">
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title"><strong>@Html.DisplayFor(modelItem => item.Position.Title)</strong></h5>
                                <p class="card-text"><strong>Store Number</strong><br />@Html.DisplayFor(model => item.Location.StoreNumber)</p>
                                <p class="card-text"><strong>Job Description</strong><br />@Html.DisplayFor(model => item.Position.JobDescription)</p>
                                @if (User.IsInRole("Employee"))
                                {
                                    <p>
                                        @Html.ActionLink("Apply", "OneClickApply", "OpenPositions", new { id = item.OpenPositionId }, new { @class = "btn btn-success" })
                                        @Html.ActionLink("Details", "Details", new { @class = "btn btn-primary", id = item.OpenPositionId })
                                    </p>
                                }
                                @if (Request.IsAuthenticated)
                                {
                                    if (User.IsInRole("Admin"))
                                    {
                                        <p>
                                            @Html.ActionLink("Edit", "Edit", new { id = item.OpenPositionId }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.OpenPositionId })
                                        </p>

                                    }
                                }
                                <p class="card-text"><small class="text-muted"></small></p>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>       
        <div class="col-md-6 col-sm-4">
            @foreach (var item in Model)
            {
                <div class="card mb-1" style="width: 500px;">
                    <div class="row no-gutters">
                        <div class="col-md-4">
                            <!--Future Update to add image field to position then update this with the Dynamic Image from the positions.-->
                            <img src="~/Content/images/nurse-1490637001R9I.jpg" class="card-img-top img-responsive" alt="nurse">
                        </div>
                        <div class="col-md-8">
                            <div class="card-body">
                                <h5 class="card-title"><strong>@Html.DisplayFor(modelItem => item.Position.Title)</strong></h5>
                                <p class="card-text"><strong>Store Number</strong><br />@Html.DisplayFor(model => item.Location.StoreNumber)</p>
                                <p class="card-text"><strong>Job Description</strong><br />@Html.DisplayFor(model => item.Position.JobDescription)</p>
                                @if (User.IsInRole("Employee"))
                                {
                                    <p>
                                        @Html.ActionLink("Apply", "OneClickApply", "OpenPositions", new { id = item.OpenPositionId }, new { @class = "btn btn-success" })
                                        @Html.ActionLink("Details", "Details", new { @class = "btn btn-primary", id = item.OpenPositionId })
                                    </p>
                                }
                                @if (Request.IsAuthenticated)
                                {
                                    if (User.IsInRole("Admin"))
                                    {
                                        <p>
                                            @Html.ActionLink("Edit", "Edit", new { id = item.OpenPositionId }) |
                                            @Html.ActionLink("Delete", "Delete", new { id = item.OpenPositionId })
                                        </p>

                                    }
                                }
                                <p class="card-text"><small class="text-muted"></small></p>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
    </div>
</div>

